//! SeaORM Entity. Generated by sea-orm-codegen 0.3.2

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "block_stats")]
pub struct Model {
    #[sea_orm(primary_key)]
    #[serde(skip_deserializing)]
    pub id: i32,
    pub block_hash: String,
    pub height: i64,
    pub avg_fee: f64,
    pub avg_fee_rate: f64,
    pub avg_tx_size: i64,
    pub ins: i64,
    pub max_fee: f64,
    pub max_fee_rate: f64,
    pub max_tx_size: i64,
    pub median_fee: f64,
    pub median_time: i64,
    pub median_tx_size: i64,
    pub outs: i64,
    pub subsidy: f64,
    pub sw_total_size: i64,
    pub sw_total_weight: i64,
    pub sw_txs: i64,
    pub time: i64,
    pub total_out: f64,
    pub total_size: i64,
    pub total_weight: i64,
    pub total_fee: f64,
    pub txs: i64,
    pub utxo_increase: i32,
    pub utxo_size_inc: i32,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
